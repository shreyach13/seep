---
# tasks file for roles/jenkins (create a jenkins image with other tools)
- name: install default-jre
  package:
    name: default-jre
    state: present
# install python and associated packages for aws cli tool
- name: install python3
  package:
    name: python3
    state: present
- name: install python3-setuptools
  package:
    name: python3-setuptools
    state: present
- name: apt update
  shell: apt update
- name: install python3-pip packages
  package:
    name: python3-pip
    state: present
# install awscli tool
- name: install awscli
  package:
    name: awscli
    state: present
# install unzip for decompressing downloaded packages
- name: install unzip
  package:
    name: unzip
    state: present
# install terraform via shell code
- name: install terraform
  shell: |
    wget "https://releases.hashicorp.com/terraform/0.12.10/terraform_0.12.10_linux_amd64.zip"
    unzip "terraform_0.12.10_linux_amd64.zip"
    sudo mv terraform /usr/local/bin/
    sudo rm -f "terraform_0.12.10_linux_amd64.zip"
    exit 0
  args:
    executable:
      /bin/bash
    warn: no
# install docker via shell code
- name: install docker
  shell: |
    sudo apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    sudo add-apt-repository \
      "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
      $(lsb_release -cs) \
      stable"
    sudo apt-get -y update
    sudo apt-get install -y docker-ce docker-ce-cli containerd.io
    exit 0
  args:
    warn: no
# install kubectl via shell code
- name: install kubectl
  shell: |
    curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
    chmod +x ./kubectl
    sudo mv ./kubectl /usr/local/bin/kubectl
  args:
    warn: no
# install aws iam authenticator via shell code
- name: install aws-iam-authenticator
  shell: |
    curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.14.6/2019-08-22/bin/linux/amd64/aws-iam-authenticator
    chmod +x ./aws-iam-authenticator
    mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
  args:
    warn: no
# download the jenkins .war file to defined path
- name: download jenkins.war
  get_url:
    url: http://mirrors.jenkins.io/war-stable/latest/jenkins.war
    dest: /usr/local/etc
# template the jenkins service and restart
- name: template a file to /etc/systemd/system/jenkins.service
  template:
    src: jenkins.service
    dest: /etc/systemd/system/jenkins.service
  notify:
    - Restart Jenkins
- name: flush handlers
  meta: flush_handlers
# enable the jenkins service
- name: enable Jenkins service
  service:
    name: jenkins.service
    enabled: yes
# wait for path and display the default jenkins password on screen and
- name: wait until the password file shows up
  wait_for:
    path: /root/.jenkins/secrets/initialAdminPassword
- shell: cat /root/.jenkins/secrets/initialAdminPassword
  register: result
- debug:
    msg: "Password: {{ result.stdout }}"
# copy to local file (path should be changed as needed by user) as well
#- local_action: copy content={{ result.stdout }} dest=/Users/eric.echter/Documents/tmp_jenkins_password
#  become: false
